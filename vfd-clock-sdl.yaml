substitutions:
  name: vfd-clock-sdl
  friendly_name: VFD Clock SDL

packages:
  host: !include common/host.yaml

font:
  - file: "fonts/cal.bdf"
    id: f_cal
  - file: "fonts/pixel.ttf"
    id: f_main
  - file: "fonts/vhs.ttf"
    id: f_vhs
    size: 34
  - file: "fonts/MatrixChunky8X.bdf"
    id: f_matrix
  - file: "fonts/UV.bdf"
    id: f_uv
  - file: 'https://cdn.jsdelivr.net/npm/@mdi/font@7.4.47/fonts/materialdesignicons-webfont.ttf'
    id: f_icons
    glyphs: &mdi-weather-glyphs
      - "\U000F0599" # mdi-weather-sunny
      - "\U000F0594" # mdi-weather-night
      - "\U000F0595" # mdi-weather-partly-cloudy
      - "\U000F0F31" # mdi-weather-night-partly-cloudy
      - "\U000F0590" # mdi-weather-cloudy
      - "\U000F0591" # mdi-weather-fog
      - "\U000F0597" # mdi-weather-rainy
      - "\U000F0598" # mdi-weather-snowy
      - "\U000F067F" # mdi-weather-snowy-rainy
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F067E" # mdi-weather-lightning-rainy
      - "\U000F0593" # mdi-weather-lightning

time:
  - platform: homeassistant
    timezone: Europe/London
    id: tm

# sensor:
#   - platform: homeassistant
#     id: w_temp
#     entity_id: sensor.knmi_temperature
#     # entity_id: sensor.weather_home_temperature
#   - platform: homeassistant
#     id: w_high_temp
#     entity_id: knmi_max_temperature_today
#     # entity_id: sensor.weather_home_high_temperature
#   - platform: homeassistant
#     id: w_low_temp
#     entity_id: knmi_min_temperature_today
#     # entity_id: sensor.weather_home_low_temperature
#   # - platform: homeassistant
#   #   id: w_uv
#   #   entity_id: sensor.weather_home_uv_index

display:
  - platform: sdl
    id: vfd
    update_interval: 1s
    dimensions:
      width: 256
      height: 48
    lambda: |-
      auto now = id(tm).now();

      // clock frame
      const int cl_x = 5;
      const int cl_y = 5;
      const int cl_wx = 96;
      const int cl_wy = 22;
      // white background
      it.filled_rectangle(cl_x + 1, cl_y, cl_wx, cl_wy + 2);
      it.filled_rectangle(cl_x, cl_y + 1, cl_wx + 2, cl_wy);
      // border 
      it.line(cl_x, cl_y - 2, cl_x + cl_wx + 1, cl_y -2);
      it.line(cl_x, cl_y + cl_wy +3, cl_x + cl_wx + 1, cl_y + cl_wy +3);
      it.line(cl_x -2, cl_y, cl_x -2, cl_y + cl_wy +1);
      it.line(cl_x + cl_wx +3, cl_y, cl_x + cl_wx +3, cl_y + cl_wy +1);
      // border corners
      it.line(cl_x -1,           cl_y -1,          cl_x -1,           cl_y -1);
      it.line(cl_x -1,           cl_y + cl_wy + 2, cl_x -1,           cl_y + cl_wy + 2);
      it.line(cl_x + cl_wx + 2,  cl_y -1,          cl_x + cl_wx + 2,  cl_y -1);
      it.line(cl_x + cl_wx + 2,  cl_y + cl_wy + 2, cl_x + cl_wx + 2,  cl_y + cl_wy + 2);
      // clock
      it.strftime(cl_x + 2, cl_y + 7, id(f_main), COLOR_OFF, TextAlign::TOP_LEFT, "%H:%M:%S", now);

      // calendar frame
      const int calf_x = 208;
      const int calf_y = 0;
      it.rectangle(calf_x, calf_y, 48, 48);
      // calendar top bar
      it.filled_rectangle(calf_x, calf_y, 48, 11);
      // calendar weekday
      std::string day = now.strftime("%a");
      for (int i = 0; i < day.length(); i++)
        day[i] = toupper(day[i]);
      it.print(calf_x + 24, calf_y + 1, id(f_cal), COLOR_OFF, TextAlign::TOP_CENTER, day.c_str());
      // calendar date
      it.strftime(calf_x + 25, calf_y + 32, id(f_vhs), TextAlign::CENTER, "%d", now);

      // UV
      it.print(184, 0, id(f_uv), "# 4");

      // weather frame
      const int wf_x = 184;
      const int wf_y = 12;
      it.rectangle(wf_x, wf_y, 23, 36);
      // weather icon
      it.print(wf_x + 11, wf_y, id(f_icons), TextAlign::TOP_CENTER, "\U000F0598");
      // weather temperature
      it.printf(wf_x + 12, wf_y + 25, id(f_matrix), TextAlign::TOP_CENTER, "%.0f °C", 25.6f);

      // high-low frame
      const int hlf_x = 149;
      const int hlf_y = 0;
      it.rectangle(hlf_x, hlf_y, 34, 27);
      // high 
      it.printf(hlf_x + 3, hlf_y + 3, id(f_matrix), "HI %.0f °C", 25.6f);
      // separator
      it.line(hlf_x + 4, hlf_y + 13, hlf_x + 29, hlf_y + 13);
      // low 
      it.printf(hlf_x + 3, hlf_y + 16, id(f_matrix), "LO %.0f °C", -8.9f);
